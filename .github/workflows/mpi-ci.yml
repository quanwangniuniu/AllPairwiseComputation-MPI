name: MPI Project CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Add manual trigger option

jobs:
  build-and-test:
    runs-on: ubuntu-latest  # Use GitHub-hosted Ubuntu runner
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up MPI
      run: |
        sudo apt-get update
        sudo apt-get install -y openmpi-bin openmpi-common libopenmpi-dev
        
    - name: Set up GCC
      run: |
        sudo apt-get install -y gcc g++ make cmake
        
    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake ..
        
    - name: Build
      run: |
        cd build
        make
        
    - name: Run Tests
      run: |
        cd build
        mpirun -np 1 ./test_all_pairwise
        mpirun -np 2 ./test_distributed
        
    - name: Run Performance Tests
      run: |
        cd build
        echo "Running sequential test with M=5, N=4, float"
        mpirun -np 1 ./all_pairwise 5 4 float
        
        echo "Running parallel test with M=5, N=4, float"
        mpirun -np 2 ./all_pairwise 5 4 float
        
        echo "Running sequential test with M=10, N=8, double"
        mpirun -np 1 ./all_pairwise 10 8 double
        
        echo "Running parallel test with M=10, N=8, double"
        mpirun -np 2 ./all_pairwise 10 8 double
        
        echo "Running sequential test with M=100, N=50, float"
        mpirun -np 1 ./all_pairwise 100 50 float
        
        echo "Running parallel test with M=100, N=50, float"
        mpirun -np 2 ./all_pairwise 100 50 float
        
    - name: Create Test Results Directory
      run: |
        mkdir -p build/test_results
        touch build/test_results/test_results.txt
        touch build/test_results/performance_results.txt
        
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: build/test_results/
        if-no-files-found: warn
        
    - name: Run Memory Check
      run: |
        cd build
        valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --verbose --log-file=valgrind-out.txt mpirun -np 1 ./all_pairwise 5 4 float
        
    - name: Upload Memory Check Results
      uses: actions/upload-artifact@v4
      with:
        name: memory-check-results
        path: build/valgrind-out.txt
        if-no-files-found: warn 